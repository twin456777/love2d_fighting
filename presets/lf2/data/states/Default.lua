local state = { variables = {} } -- | [номер_cтейта] | -- Название стейта
-- Описание действия стейта и его переменных.
--
---------------------------------------------------------------------
function state:Load(object) -- Функция выполняется при загрузке стейта, служит в освновном для задачи переменных объекту и указания их начальных значений. Принимается переменная "object", содержащая в себе конкретный объект, для которого загружается стейт.
---------------------------------------------------------------------
	self.variables.force = 1 -- Задается переменная "force", равная "1".
	self.variables.isGravity = object.head.gravity -- Получаем в переменную "isGravity" значение "gravity" персонажа.
end
---------------------------------------------------------------------
function state:Update(object) -- Функция вызывается каждый тик, для объектов, в шапке которых в списке "states: {}" указан данный стейт. Принимает переменную "object", содержащую в себе объект, для которого происходит данный вызов.
---------------------------------------------------------------------
	object:addMotion_X(self.variables.force * object.facing) -- Объекту добавляется движение по оси X с силой "force", в направлении взгляда данного объекта.
end
---------------------------------------------------------------------
function state:Processing(object,s) -- Функция вызывается каждый тик, для объектов, в фрейме которых присутсвует блок "state [номер_стейта]:{ -- переменные -- }", где номер_стейта является номером текущего стейта, а необязательное содержимое блока "{}" содержит статичные переменные, передаваемые стейту. Функция принимает переменную object, содержащую в себе объект, вызвавший функцию, а также переменную s, являющуюся массивом статичных переменных, передаваемых стейту.
---------------------------------------------------------------------
	object:setMotion_X(0) -- Объекту обнуляется движение по оси X
	object.x = s.x_coord -- Объекту устанавливается положение на оси X, равное значению передаваемой переменной "x_coord"
end
---------------------------------------------------------------------
return state

-- ВНИМАНИЕ! ФУНКЦИИ НЕ ЯВЛЯЮТСЯ ОБЯЗАТЕЛЬНЫМИ! ДЛЯ УЛУЧШЕНИЯ ПРОИЗВОДИТЕЛЬНОСТИ РЕКОМЕНДУЕТСЯ УДАЛЯТЬ НЕИСПОЛЬЗУЕМЫЕ. ТАК, НАПРИМЕР, ЕСЛИ ВАМ НЕ НУЖНО ЧТОБЫ СТЕЙТ ВЫПОЛНЯЛСЯ КАЖДЫЙ ТИК, ВНЕ ЗАВИСИМОСТИ ОТ НАЛИЧИЯ ЭТОГО СТЕЙТА В ТЕКУЩЕМ КАДРЕ ОБЪЕКТА, МОЖНО ПРОСТО УДАЛИТЬ ФУНКЦИЮ "STATE:UPDATE".

-- В шапке стейта находится переменная variables, при загрузке боя, в эту переменную заносится ссылка на массив с переменными, создаваемый внутри каждого объекта. Таким образом, обращаясь к переменной self.variables.force, вы, на самом деле, обращаетесь к переменной object.variables.states[номер_стейта].force. Данная ссылка введена для удобства.

-- Если вам позволяет опыт и хватает решимости, вы в праве изменять названия функций или переменных, принимаемых этими функциями. Но помните, что в таком случае, я, как разработчик движка, уже не в силах буду помочь вам, при возникнопении трудностей и ошибок. Действуйте только на свой страх и риск!

-- Данный файл является примером оформления стейтов. При попытках написать собственные стейты, вы можете использовать этот пример, списки переменных для объектов и базовые знания Lua. Комментарии не являются обязательным атрибутом стейтов, но, согласитесь, всегда лучше, когда эти комментарии есть.